<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ecom.javacodings.merchandiser.access.OrderManagerDAO">
	
<!-- 	<insert id="orderUpdate" parameterType="OrderDTO">
		<foreach collection="orders" item="order" separator="" open="INSERT ALL " close="SELECT 1 FROM DUAL">
			INTO ORDERS (ORDER_ID, ITEM_ID, MEMBER_ID, QUANTITY, STATE, REG_DATE) 
			VALUES (#{order_id}, #{item_id}, #{member_id}, #{quantity}, #{state}+1, sysdate) 
		</foreach>
	</insert> -->

	<select id="listOrder" parameterType="pageDTO" resultType="OrderDTO">
		SELECT ORDER_ID, ITEM_ID, MEMBER_ID, QUANTITY, STATE, REG_DATE
		FROM (
				 SELECT O.ORDER_ID, ITEM_ID, MEMBER_ID, QUANTITY, STATE, REG_DATE,
						ROW_NUMBER() OVER (ORDER BY REG_DATE DESC) AS RN
				 FROM ORDERS O
						  JOIN
					  (
						  SELECT ORDER_ID, MAX(STATE) AS STATE, MAX(REG_DATE) AS REG_DATE
						  FROM ORDER_STATE
						  GROUP BY ORDER_ID
					  ) S
					  ON O.ORDER_ID = S.ORDER_ID
			 )
		WHERE RN BETWEEN #{start} AND #{end}
	</select>
	
	
	<select id="countState" resultType="orderDTO" parameterType="int">
		select D.STATE, NVL(Q.QUANTITY, 0) AS QUANTITY
		FROM
		(
			SELECT ROWNUM STATE
			FROM DUAL
			CONNECT BY ROWNUM &lt;= 8 AND ROWNUM &gt;= 1
		) D
		left JOIN
		(
			SELECT STATE, COUNT(STATE) AS QUANTITY
			FROM
				(
				SELECT MAX(STATE) AS STATE
				FROM ORDER_STATE
				GROUP BY ORDER_ID
				)
			GROUP BY STATE
			ORDER BY STATE
		) Q
		on Q.STATE = D.STATE
		order by D.STATE
    </select>

	<insert id="updateOrderStates" parameterType="list" useGeneratedKeys="false">
	<foreach collection="orders" item="order" separator="" open="INSERT ALL " close="SELECT 1 FROM DUAL">
		INTO ORDER_STATE (ORDER_ID, STATE)
		VALUES (#{order.order_id}, #{order.state})
	</foreach>
	</insert>
</mapper>