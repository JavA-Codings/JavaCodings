<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ecom.javacodings.customer.access.orders.OrderDAO">
	<!-- Region Metadata -->

	<select id="countOrdersByMemberId" parameterType="String">
		SELECT COUNT(ORDER_ID)
		FROM ORDERS
		WHERE MEMBER_ID = #{member_id}
	</select>

	<select id="isExistOrderId">
		SELECT CASE WHEN COUNT(ORDER_ID) > 0 THEN '1' ELSE '0' END
		FROM ORDERS
		WHERE ORDER_ID = #{order_id}
	</select>

	<!-- End Region Metadata -->
	<!-- Region 기본 읽고 쓰기 ===============================================================-->

	<insert id="add" useGeneratedKeys="false">
		INSERT ALL
		INTO ORDERS(ORDER_ID, ITEM_ID, MEMBER_ID)
		VALUES (#{order.order_id}, #{order.item_id}, #{order.member_id})

		INTO ORDER_STATES(ORDER_ID, STATE)
		VALUES (#{order.order_id}, 0)

		<foreach collection="order.itemList" item="item">
			INTO ORDER_ITEMS(ORDER_ID, ITEM_ID, AMOUNT)
			VALUES(#{item.order_id}, #{item_item_id}, #{item.amount})
		</foreach>
		SELECT 1 FROM DUAL
	</insert>

	<!-- ** READ ** -->

	<select id="findUnPayedOrderByOrderId" resultType="orderDTO">
		SELECT O.ORDER_ID, O.MEMBER_ID,
			   A.AMOUNT,
			   S.STATE, TO_CHAR(S.REG_DATE, 'YYYYMMDDHH24MISS') AS REG_DATE
		FROM ORDERS O
		JOIN ORDER_STATES S
			 ON O.ORDER_ID = S.ORDER_ID
			 AND (SELECT MAX(S.STATE) FROM ORDERS WHERE O.ORDER_ID = #{order_id}) = '0'
		JOIN (
			SELECT SUM(AMOUNT) AS AMOUNT
		  	FROM ORDER_ITEMS
		  	WHERE ORDER_ID = #{order_id}
		  	GROUP BY AMOUNT
		) A
		WHERE O.ORDER_ID = #{order_id}
	</select>

	<select id="findAllItemByOrderId" resultType="CartDTO">
		SELECT O.ITEM_ID, I.LABEL, O.AMOUNT
	    FROM ORDER_ITEMS O
	    JOIN ITEMS I ON O.ITEM_ID = I.ITEM_ID
		WHERE O.ORDER_ID = #{order_id}
	</select>

	<select id="getItemIdByOrderId" resultType="String">
		SELECT ITEM_ID
		FROM ORDER_ITEMS
		WHERE ORDER_ID = #{order_id}
	</select>


	<insert id="increaseStateByOrderId">
		INSERT INTO ORDER_STATES (ORDER_ID,STATE, REG_DATE) VALUES
		(#{order_id}, (SELECT MAX(STATE) FROM ORDER_STATES) + 1,
		 TO_DATE(#{reg_date}, 'YYYYMMDDHH24MISS'))
	</insert>

	<update id="updateOrderStateByOrderID" parameterType="orderDTO">
		UPDATE ORDER_STATES SET
			STATE = #{state}
		WHERE ORDER_ID = #{order_id}
	</update>

	<update id="setTransactionIdByOrderId">
		UPDATE ORDERS SET
			TRANSACTION_ID = #{transaction_id}
		WHERE ORDER_ID = #{order_id}
	</update>

	<!-- End Region Basic CRUD -->
</mapper>
 